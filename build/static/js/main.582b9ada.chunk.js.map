{"version":3,"sources":["App.js","Blockly/BlocklyComponent.jsx","Blockly/index.js","generator/generator.js","widgets/dialog.js","blocks/start_block.js","blocks/flow_blocks/wait_block.js","blocks/flow_blocks/infinite_loop_block.js","blocks/flow_blocks/break_block.js","blocks/calculate_blocks/not_block.js","blocks/calculate_blocks/bool_block.js","blocks/calculate_blocks/compare_block.js","blocks/calculate_blocks/and_or_block.js","blocks/smart_home_blocks/servo_motor_block.js","blocks/smart_home_blocks/rgb_block.js","blocks/smart_home_blocks/led_on_off_block.js","blocks/smart_home_blocks/lcd_clear_block.js","blocks/smart_home_blocks/lcd_set_pos_block.js","blocks/smart_home_blocks/lcd_message_block.js","blocks/sound_blocks/sound_play_block.js","serviceWorker.js","index.js"],"names":["App","props","generateCode","evalCode","codeList","BlocklyJS","workspaceToCode","simpleWorkspace","current","workspace","split","code","includes","eval","console","log","err","React","createRef","className","style","display","id","onClick","this","readOnly","trashcan","media","ref","move","scrollbars","drag","wheel","renderer","initialXml","name","colour","type","custom","Component","Blockly","setLocale","locale","BlocklyComponent","blocklyDiv","toolbox","rest","children","ContextMenuRegistry","registry","unregister","primaryWorkspace","inject","theme","Xml","domToWorkspace","textToDom","xml","Fragment","xmlns","is","Block","p","createElement","Category","Value","Field","Shadow","block","getField","getText","CustomDialog","alert","message","callback","show","onCancel","confirm","prompt","defaultValue","showInput","showOkay","showDefault","onOkay","inputField","value","showCancel","substring","length","hide","backdropDiv_","dialogDiv_","title","options","backdropDiv","dialogDiv","document","cssText","body","appendChild","onclick","event","stopPropagation","innerHTML","dialogInput","getElementById","focus","onkeyup","keyCode","okay","addEventListener","isAble","startBlock","init","jsonInit","setColour","toLocaleString","disabled","onchange","element","waitBlock","second","getFieldValue","infiniteLoopBlock","statement","getInputTargetBlock","blockCode","blockToCode","breakBlock","notBlock","value_bool","boolean","ORDER_ATOMIC","boolBlock","ORDER_ADDITION","compareBlock","a","b","operator","andOrBlock","a_value","b_value","setOutput","servoMotorBlock","degree","rgbBlock","red","green","blue","ledOnOffBlock","onOff","lcdClearBlock","lcdSetPosBlock","line","box","lcdMessageBlock","soundPlayBlock","text","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","navigator","serviceWorker","ready","then","registration"],"mappings":"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","file":"static/js/main.582b9ada.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport BlocklyComponent, { Block, Value, Field, Shadow, Category } from './Blockly';\n\nimport BlocklyJS from 'blockly/javascript';\nimport './blocks/customblocks';\nimport './generator/generator';\nimport './widgets/dialog.js'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleWorkspace = React.createRef();\n  }\n\n\n  generateCode = () => {\n    let evalCode;\n    var codeList = BlocklyJS.workspaceToCode(\n      this.simpleWorkspace.current.workspace\n    );\n\n    for (var code of codeList.split(\"\\n\\n\")) {\n      if (code.split(\" \")[0] === \"var\") {\n        evalCode = code;\n      }\n\n      if (code.includes(\"//Start\\n\")) {\n        evalCode = evalCode + code;\n        try {\n          eval(evalCode);\n          console.log(\"END\");\n        } catch (err) {\n          console.log(\"CODE_FAIL\");\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ display: 'flex' }}>\n        <div id=\"box\">\n        </div>\n        <div id=\"box1\">\n          <div id=\"column\">\n            <div id=\"subtitle\">PROJECT NAME</div>\n            <div id=\"title\">인공지능 홈</div>\n          </div>\n          <button id=\"codeButton\" onClick={this.generateCode}> START </button>\n        </div>\n        <BlocklyComponent\n          readOnly={false} trashcan={true} media={'media/'}\n          ref={this.simpleWorkspace}\n          move={{\n            scrollbars: true,\n            drag: true,\n            wheel: true,\n          }}\n          renderer={'zelos'}\n          initialXml={`\n              <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n              </xml>\n            `}>\n          <Category name=\"시작\" colour=\"#5AA8DF\">\n            <Block type=\"start_block\" />\n          </Category>\n          <Category name=\"흐름\" colour=\"#A43033\">\n            <Block type=\"wait_block\" />\n            <Block type=\"controls_repeat_ext\">\n              <Value name=\"TIMES\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">10</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"infinite_loop\" />\n            <Block type=\"break_loop\" />\n            <Block type=\"controls_if\" />\n          </Category>\n          <Category name=\"변수\" colour=\"#E99F38\" custom=\"VARIABLE\" />\n          <Category name=\"연산\" colour=\"#7AB964\">\n            <Block type=\"math_arithmetic\">\n              <Value name=\"A\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">1</Field>\n                </Shadow>\n              </Value>\n              <Value name=\"B\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">1</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"compare_block\">\n              <Value name=\"A\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">1</Field>\n                </Shadow>\n              </Value>\n              <Value name=\"B\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">1</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"and_or_block\" >\n              <Value name=\"A\">\n                <Block type=\"boolean_block\">\n                  <Field name=\"BOOL\">TRUE</Field>\n                </Block>\n              </Value>\n              <Value name=\"B\">\n                <Block type=\"boolean_block\">\n                  <Field name=\"BOOL\">TRUE</Field>\n                </Block>\n              </Value>\n            </Block>\n            <Block type=\"not_block\">\n              <Value name=\"BOOL\">\n                <Block type=\"boolean_block\">\n                  <Field name=\"B\">TRUE</Field>\n                </Block>\n              </Value>\n            </Block>\n          </Category>\n          <Category name=\"소리\" colour=\"#667D8A\">\n            <Block type=\"sound_play_block\">\n              <Value name=\"SOUND\">\n                <Shadow type=\"text\">\n                  <Field name=\"TEXT\">abc</Field>\n                </Shadow>\n              </Value>\n            </Block>\n          </Category>\n          <Category name=\"스마트홈\" colour=\"#AE76F5\">\n            <Block type=\"text_print\"></Block>\n            <Block type=\"servo_motor_block\" />\n            <Block type=\"rgb_block\" />\n            <Block type=\"led_on_off_block\" />\n            <Block type=\"lcd_clear_block\" />\n            <Block type=\"lcd_set_pos_block\" />\n            <Block type=\"lcd_message_block\" />\n          </Category>\n        </BlocklyComponent> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport './BlocklyComponent.css';\n\nimport Blockly from 'blockly/core';\nimport locale from 'blockly/msg/ko';\nimport BlocklyJS from 'blockly/javascript';\nimport 'blockly/blocks';\n\nBlockly.setLocale(locale);\n\nclass BlocklyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.blocklyDiv = React.createRef();\n        this.toolbox = React.createRef();\n    }\n\n    componentDidMount() {\n        const { initialXml, children, ...rest } = this.props;\n        Blockly.ContextMenuRegistry.registry.unregister('workspaceDelete');\n        Blockly.ContextMenuRegistry.registry.unregister('undoWorkspace');\n        Blockly.ContextMenuRegistry.registry.unregister('redoWorkspace');\n        this.primaryWorkspace = Blockly.inject(\n            this.blocklyDiv.current,\n            {\n                toolbox: this.toolbox.current,\n                theme: {\n                    'blockStyles': {\n                        \"loop_blocks\": {\n                            \"colourPrimary\": \"#A43033\",\n                            \"colourSecondary\": \"#FEAFB1\",\n                        },\n                        \"logic_blocks\": {\n                            \"colourPrimary\": \"#A43033\",\n                            \"colourSecondary\": \"#FEAFB1\",\n                        },\n                        \"text_blocks\": {\n                            \"colourPrimary\": \"#7AB964\",\n                            \"colourSecondary\": \"#BEDAB4\",\n                        },\n                        \"math_blocks\": {\n                            \"colourPrimary\": \"#7AB964\",\n                            \"colourSecondary\": \"#BEDAB4\",\n                        },\n                        \"variable_blocks\": {\n                            \"colourPrimary\": \"#E99F38\",\n                            \"colourSecondary\": \"#EFC78F\",\n                        },\n                    },\n                    'componentStyles': {\n                        'workspaceBackgroundColour': '#F7F7FB',\n                        'toolboxBackgroundColour': '#4C536D',\n                        'flyoutBackgroundColour': '#4C536D99'\n                    },\n                },\n\n                ...rest\n            },\n        );\n\n\n        if (initialXml) {\n            Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\n        }\n    }\n\n    get workspace() {\n        return this.primaryWorkspace;\n    }\n\n    setXml(xml) {\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\n    }\n\n    render() {\n        const { children } = this.props;\n\n        return <React.Fragment>\n            <div ref={this.blocklyDiv} id=\"blocklyDiv\" />\n            <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: 'none' }} ref={this.toolbox}>\n                {children}\n            </xml>\n        </React.Fragment>;\n    }\n}\n\nexport default BlocklyComponent;\n","/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview XML wrappers for block, category, value, field and shadow.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n import React from 'react';\nimport BlocklyComponent from './BlocklyComponent';\n\nexport default BlocklyComponent;\n\nconst Block = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"block\", props, children);\n};\n\nconst Category = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"category\", props, children);\n};\n\nconst Value = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"value\", props, children);\n};\n\nconst Field = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"field\", props, children);\n};\n\nconst Shadow = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"shadow\", props, children);\n};\n\nexport { Block, Category, Value, Field, Shadow }","/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Define generation methods for custom blocks.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n// More on generating code:\n// https://developers.google.com/blockly/guides/create-custom-blocks/generating-code\n\nimport * as Blockly from 'blockly/core';\nimport 'blockly/javascript';\n\nBlockly.JavaScript['test_react_field'] = function (block) {\n    return 'console.log(\\'custom block\\');\\n';\n};\n\nBlockly.JavaScript['test_react_date_field'] = function (block) {\n    return 'console.log(' + block.getField('DATE').getText() + ');\\n';\n};\n","import Blockly from 'blockly/core';\nimport 'blockly/blocks';\n\nclass CustomDialog {};\n\n/** Override Blockly.alert() with custom implementation. */\nBlockly.alert = function(message, callback) {\n    console.log('Alert: ' + message);\n    CustomDialog.show('Alert', message, {\n        onCancel: callback\n    });\n};\n\n/** Override Blockly.confirm() with custom implementation. */\nBlockly.confirm = function(message, callback) {\n    console.log('Confirm: ' + message);\n    // CustomDialog.show('Confirm', message, {\n    //     showOkay: true,\n    //     onOkay: function() {\n    //         callback(true);\n    //     },\n    //     showCancel: true,\n    //     onCancel: function() {\n    //         callback(false);\n    //     }\n    // });\n    callback(true);\n};\n\n/** Override Blockly.prompt() with custom implementation. */\nBlockly.prompt = function(message, defaultValue, callback) {\n    console.log('Prompt: ' + message);\n    if (message === \"새 변수 이름:\") {\n        CustomDialog.show('변수 만들기', message, {\n            showInput: true,\n            showOkay: true,\n            showDefault: false,\n            onOkay: function() {\n                callback(CustomDialog.inputField.value);\n            },\n            showCancel: true,\n            onCancel: function() {\n                callback(null);\n            }\n        });\n    } else {\n        CustomDialog.show(message.substring(0, message.length - 1), message, {\n            showInput: true,\n            showOkay: true,\n            showDefault: true,\n            onOkay: function() {\n                callback(CustomDialog.inputField.value);\n            },\n            showCancel: true,\n            onCancel: function() {\n                callback(null);\n            }\n        });\n    }\n    CustomDialog.inputField.value = defaultValue;\n};\n\n/** Hides any currently visible dialog. */\nCustomDialog.hide = function() {\n    if (CustomDialog.backdropDiv_) {\n        CustomDialog.backdropDiv_.style.display = 'none';\n        CustomDialog.dialogDiv_.style.display = 'none';\n    }\n};\n\n/**\n * Shows the dialog.\n * Allowed options:\n *  - showOkay: Whether to show the OK button.\n *  - showCancel: Whether to show the Cancel button.\n *  - showInput: Whether to show the text input field.\n *  - onOkay: Callback to handle the okay button.\n *  - onCancel: Callback to handle the cancel button and backdrop clicks.\n */\nCustomDialog.show = function(title, message, options) {\n    var backdropDiv = CustomDialog.backdropDiv_;\n    var dialogDiv = CustomDialog.dialogDiv_;\n    if (!dialogDiv) {\n        // Generate HTML\n        backdropDiv = document.createElement('div');\n        backdropDiv.id = 'customDialogBackdrop';\n        backdropDiv.style.cssText =\n            'position: absolute;' +\n            'top: 0; left: 0; right: 0; bottom: 0;' +\n            'background-color: rgba(0, 0, 0, .7);' +\n            'z-index: 100;';\n        document.body.appendChild(backdropDiv);\n\n        dialogDiv = document.createElement('div');\n        dialogDiv.id = 'customDialog';\n        dialogDiv.style.cssText =\n            'display: flex;' +\n            'flex-direction: column;' +\n            'max-width: 361px;' +\n            'justify-content: center;' +\n            'border-radius: 10px;' +\n            'align-items: center;' +\n            'padding-top: 10px;' +\n            // 'padding-bottom: 10px;' +\n            'padding-right: 30px;' +\n            'padding-left: 30px;' +\n            'background-color: rgba(247, 247, 251, 1);' +\n            'margin-right: auto;' +\n            'margin-left: auto;' +\n            'margin-top: 80px;';\n        backdropDiv.appendChild(dialogDiv);\n\n        dialogDiv.onclick = function(event) {\n            event.stopPropagation();\n        };\n\n        CustomDialog.backdropDiv_ = backdropDiv;\n        CustomDialog.dialogDiv_ = dialogDiv;\n    }\n    backdropDiv.style.display = 'block';\n    dialogDiv.style.display = 'block';\n\n    dialogDiv.innerHTML =\n        '<div style=\"display : flex; flex-direction: column;\">' +\n        '<div class=\"customDialogTitle\" style=\"' +\n        'color: rgba(99, 125, 220, 1);' +\n        'font-size: 14px;' +\n        'letter-spacing: 0%;' +\n        'padding: 14px;' +\n        'text-align: center;' +\n        'font-weight: bold;' +\n        'border-bottom: 1px solid #D8D8D8;' +\n        'font-family: Noto Sans KR, sans-serif;' +\n        `\">${title}</div>` +\n        (options.showDefault ? '' : '<div class=\"customDialogMessage\" style=\"' +\n            'margin-top: 10px;' +\n            'color: rgba(73, 73, 73, 1);' +\n            'font-size: 10px;' +\n            'font-weight: bold;' +\n            'letter-spacing: 0%;' +\n            'text-align: left;' +\n            'margin-top: 16px;' +\n            'font-family: Noto Sans KR, sans-serif;' +\n            '\">새 변수 이름 :</div>') +\n        (options.showInput ? '<input id=\"customDialogInput\" style=\"' +\n            'height: 30px;' +\n            'width: 100%;' +\n            'margin-top: 10px;' +\n            'border-radius: 5px;' +\n            'border-color: rgba(211, 211, 211, 1);' +\n            'border-width: 1px;' +\n            'align-self: center;' +\n            'border-style: solid;' +\n            'background-color: rgba(255, 255, 255, 1);' +\n            '\">' : '') +\n        // '<div class=\"customDialogButtons\">' +\n        (options.showOkay ? '<button id=\"okay\" style=\"' +\n            ' display: flex;' +\n            'flex-direction: row;' +\n            'justify-content: center;' +\n            'margin-top: 20px;' +\n            'border-radius: 17.5px;' +\n            'align-self: center;' +\n            'padding-top: 7px;' +\n            'padding-bottom: 7px;' +\n            'padding-right: 30px;' +\n            'width: 106px;' +\n            'padding-left: 30px;' +\n            'background-color: rgba(99, 125, 220, 1);' +\n            'color: rgba(255, 255, 255, 1);' +\n            'font-size: 12px;' +\n            'border: none;' +\n            'letter-spacing: 0%;' +\n            'font-family: Noto Sans KR, sans-serif;' +\n            `\">${options.showDefault ? '확인' : '생성하기'}</button>` : '') +\n        (options.showCancel ? '<button id=\"cancel\" style=\"' +\n            'margin-top: 10px;' +\n            'margin-bottom: 20px;' +\n            'background-color: inherit;' +\n            'color: rgba(166, 166, 166, 1);' +\n            'font-size: 10px;' +\n            'letter-spacing: 0%;' +\n            'border: none;' +\n            'text-align: center;' +\n            'font-family: Noto Sans KR, sans-serif;' +\n            '\">취소</button>' : '') +\n        '</div>';\n\n    var onOkay = function(event) {\n        CustomDialog.hide();\n        options.onOkay && options.onOkay();\n        event && event.stopPropagation();\n    };\n    var onCancel = function(event) {\n        CustomDialog.hide();\n        options.onCancel && options.onCancel();\n        event && event.stopPropagation();\n    };\n\n    var dialogInput = document.getElementById('customDialogInput');\n    CustomDialog.inputField = dialogInput;\n    if (dialogInput) {\n        dialogInput.focus();\n\n        dialogInput.onkeyup = function(event) {\n            if (event.keyCode === 13) {\n                // Process as OK when user hits enter.\n                onOkay();\n                return false;\n            } else if (event.keyCode === 27) {\n                // Process as cancel when user hits esc.\n                onCancel();\n                return false;\n            }\n        };\n    } else {\n        var okay = document.getElementById('okay');\n        okay && okay.focus();\n    }\n\n    if (options.showOkay) {\n        document.getElementById('okay')\n            .addEventListener('click', onOkay);\n    }\n    if (options.showCancel) {\n        document.getElementById('cancel')\n            .addEventListener('click', onCancel);\n    }\n\n    // backdropDiv.onclick = onCancel;\n};","import * as Blockly from 'blockly/core';\n\nlet isAble = false;\n\nvar startBlock = {\n    \"type\": \"start_block\",\n    \"message0\": \"▶︎ 시작\",\n    \"nextStatement\": true,\n};\n\nBlockly.JavaScript['start_block'] = function() {\n    var code = `//Start\n    console.log(\"START\");\n    let date = Date.now();\n    let currentDate = null;\\n`;\n    return code;\n};\n\nBlockly.Blocks['start_block'] = {\n    init: function() {\n        this.jsonInit(startBlock);\n        this.setColour(\"#5AA8DF\");\n        this.toLocaleString('ko');\n        this.disabled = isAble;\n    },\n    onchange: function(event) {\n        if (`${event.element}` === 'dragStop' && this.type === \"start_block\") {\n            isAble = true;\n        }\n        if (`${event.element}` === 'dragStart' && this.type === \"start_block\") {\n            isAble = false;\n        }\n    }\n};","import * as Blockly from 'blockly/core';\n\nvar waitBlock = {\n    \"type\": \"wait_block\",\n    \"message0\": \"%1초 기다리기\",\n    \"args0\": [{\n        \"type\": \"field_number\",\n        \"name\": \"duration\",\n        \"value\": 1,\n    }, ],\n    \"nextStatement\": null,\n    \"previousStatement\": null,\n};\n\nBlockly.JavaScript['wait_block'] = function(block) {\n    var second = block.getFieldValue(\"duration\");\n\n    var code =\n        `date = Date.now();\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < ${second}000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['wait_block'] = {\n    init: function() {\n        this.jsonInit(waitBlock);\n        this.setColour(\"#A43033\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar infiniteLoopBlock = {\n    \"type\": \"infinite_loop\",\n    \"message0\": \"계속 반복하기 %1 %2\",\n    \"args0\": [{\n            \"type\": \"input_dummy\"\n        },\n        {\n            \"type\": \"input_statement\",\n            \"name\": \"INFINITE\"\n        }\n    ],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"무한 루프 블럭\",\n};\n\nBlockly.JavaScript['infinite_loop'] = function(block) {\n    var statement = block.getInputTargetBlock('INFINITE');\n    var blockCode = Blockly.JavaScript.blockToCode(statement);\n    var code =\n        `while(true){\n      ${blockCode}}\\n`;\n    return code;\n};\n\nBlockly.Blocks['infinite_loop'] = {\n    init: function() {\n        this.jsonInit(infiniteLoopBlock);\n        this.setColour(\"#A43033\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar breakBlock = {\n    \"type\": \"break_loop\",\n    \"message0\": \"반복 중단하기\",\n    \"previousStatement\": null,\n    \"tooltip\": \"루프 나오기\",\n};\n\nBlockly.JavaScript['break_loop'] = function(block) {\n    var code =\n        `break;\\n`;\n    return code;\n};\n\nBlockly.Blocks['break_loop'] = {\n    init: function() {\n        this.jsonInit(breakBlock);\n        this.setColour(\"#A43033\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar notBlock = {\n    \"type\": \"not_block\",\n    \"message0\": \"%1 아니다\",\n    \"args0\": [{\n        \"type\": \"input_value\",\n        \"name\": \"BOOL\",\n    }],\n    \"output\": \"Boolean\",\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['not_block'] = function(block) {\n    var value_bool = block.getInputTargetBlock('BOOL');\n    var boolean = Blockly.JavaScript.blockToCode(value_bool);\n    var code =\n        `!${boolean[0]}`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.Blocks['not_block'] = {\n    init: function() {\n        this.jsonInit(notBlock);\n        this.setColour(\"#7AB964\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar boolBlock = {\n    \"type\": \"boolean_block\",\n    \"message0\": \"%1\",\n    \"args0\": [{\n        \"type\": \"field_dropdown\",\n        \"name\": \"BOOL\",\n        \"options\": [\n            [\n                \"참\",\n                \"true\"\n            ],\n            [\n                \"거짓\",\n                \"false\"\n            ]\n        ]\n    }],\n    \"output\": 'Boolean',\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['boolean_block'] = function(block) {\n    var value = block.getFieldValue('BOOL');\n    var code = value;\n    return [code, Blockly.JavaScript.ORDER_ADDITION];\n};\n\nBlockly.Blocks['boolean_block'] = {\n    init: function() {\n        this.jsonInit(boolBlock);\n        this.setColour(\"#7AB964\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar compareBlock = {\n    \"message0\": \"%1 %2 %3\",\n    \"args0\": [{\n            \"type\": \"field_input\",\n            \"name\": \"A\",\n            \"text\": \"1\",\n            \"output\": \"Number\",\n        },\n        {\n            \"type\": \"field_dropdown\",\n            \"name\": \"COMPARE\",\n            \"options\": [\n                [\n                    \"<\",\n                    \"<\"\n                ],\n                [\n                    \">\",\n                    \">\"\n                ],\n                [\n                    \">=\",\n                    \">=\"\n                ],\n                [\n                    \"<=\",\n                    \"<=\"\n                ],\n                [\n                    \"==\",\n                    \"===\"\n                ]\n            ]\n        },\n        {\n            \"type\": \"field_input\",\n            \"name\": \"B\",\n            \"text\": \"1\",\n            \"output\": \"Number\",\n        }\n    ],\n    \"inputsInline\": false,\n    \"output\": \"Boolean\",\n    \"colour\": 230,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['compare_block'] = function(block) {\n    var a = block.getFieldValue('A');\n    var b = block.getFieldValue('B');\n    var operator = block.getFieldValue('COMPARE');\n    var code =\n        `${a} ${operator} ${b}`;\n    return [code, Blockly.JavaScript.ORDER_ADDITION];\n};\n\nBlockly.Blocks['compare_block'] = {\n    init: function() {\n        this.jsonInit(compareBlock);\n        this.setColour(\"#7AB964\");\n        this.toLocaleString('ko');\n    },\n};\n\n// {\"motor\" : 180}\n// {\"LED\" : true}\n// {\"LED_COLOR\" : {\"R\" : 100, \"G\" : 200, \"\"}}\n\n// LCD,as;dlfja sldjfl;jas,sdff","import * as Blockly from 'blockly/core';\n\nvar andOrBlock = {\n    \"message0\": \"%1 %2 %3\",\n    \"args0\": [{\n            \"type\": \"input_value\",\n            \"name\": \"A\",\n            \"check\": \"Boolean\",\n            \"output\": \"Boolean\",\n        },\n        {\n            \"type\": \"field_dropdown\",\n            \"name\": \"COMPARE\",\n            \"options\": [\n                [\n                    \"그리고\",\n                    \"&&\"\n                ],\n                [\n                    \"또는\",\n                    \"||\"\n                ]\n            ]\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"B\",\n            \"check\": \"Boolean\",\n            \"output\": \"Boolean\",\n        },\n    ],\n    \"output\": \"Boolean\",\n    \"inputsInline\": true,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['and_or_block'] = function(block) {\n    var a = block.getInputTargetBlock('A');\n    var b = block.getInputTargetBlock('B');\n    var a_value = Blockly.JavaScript.blockToCode(a);\n    var b_value = Blockly.JavaScript.blockToCode(b);\n    var operator = block.getFieldValue('COMPARE');\n\n    console.log(`${a_value[0]} ${operator} ${b_value[0]}`);\n\n    var code =\n        `${a_value[0]} ${operator} ${b_value[0]}`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];;\n};\n\nBlockly.Blocks['and_or_block'] = {\n    init: function() {\n        this.jsonInit(andOrBlock);\n        this.setColour(\"#7AB964\");\n        this.setOutput(true, 'Boolean');\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar servoMotorBlock = {\n    \"type\": \"servo_motor_block\",\n    \"message0\": \"서보모터를 %1 돌리기\",\n    \"args0\": [{\n        \"type\": \"field_dropdown\",\n        \"name\": \"degree\",\n        \"options\": [\n            [\n                \"0°\",\n                \"0\"\n            ],\n            [\n                \"180°\",\n                \"180\"\n            ]\n        ]\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['servo_motor_block'] = function(block) {\n    var degree = block.getFieldValue('degree');\n    var code =\n        `console.log(\"MOTOR,${degree}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['servo_motor_block'] = {\n    init: function() {\n        this.jsonInit(servoMotorBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar rgbBlock = {\n    \"type\": \"rgb_block\",\n    \"message0\": \"LED 색상 R: %1  G: %2  B: %3\",\n    \"args0\": [{\n            \"type\": \"field_number\",\n            \"name\": \"red\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 255,\n            \"precision\": 1\n        },\n        {\n            \"type\": \"field_number\",\n            \"name\": \"green\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 255,\n            \"precision\": 1\n        },\n        {\n            \"type\": \"field_number\",\n            \"name\": \"blue\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 255,\n            \"precision\": 1\n        }\n    ],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['rgb_block'] = function(block) {\n    var red = block.getFieldValue('red');\n    var green = block.getFieldValue('green');\n    var blue = block.getFieldValue('blue');\n    var code =\n        `console.log(\"LED_COLOR,R${red}-G${green}-B${blue}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['rgb_block'] = {\n    init: function() {\n        this.jsonInit(rgbBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar ledOnOffBlock = {\n    \"type\": \"led_on_off_block\",\n    \"message0\": \"LED %1\",\n    \"args0\": [{\n        \"type\": \"field_dropdown\",\n        \"name\": \"onOff\",\n        \"options\": [\n            [\n                \"켜기\",\n                \"true\"\n            ],\n            [\n                \"끄기\",\n                \"false\"\n            ]\n        ]\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['led_on_off_block'] = function(block) {\n    var onOff = block.getFieldValue('onOff');\n    var code =\n        `console.log(\"LED,${onOff}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['led_on_off_block'] = {\n    init: function() {\n        this.jsonInit(ledOnOffBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar lcdClearBlock = {\n    \"type\": \"lcd_clear_block\",\n    \"message0\": \"LCD 모두 지우기\",\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['lcd_clear_block'] = function(block) {\n    var code =\n        `console.log(\"LCD_CLEAR,\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['lcd_clear_block'] = {\n    init: function() {\n        this.jsonInit(lcdClearBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar lcdSetPosBlock = {\n    \"type\": \"lcd_set_pos_block\",\n    \"message0\": \"LCD 글자 위치 정하기  %1 번째 줄,  %2 번째 칸\",\n    \"args0\": [{\n            \"type\": \"field_number\",\n            \"name\": \"line\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 1,\n            \"precision\": 1\n        },\n        {\n            \"type\": \"field_number\",\n            \"name\": \"box\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 15,\n            \"precision\": 1\n        }\n    ],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['lcd_set_pos_block'] = function(block) {\n    var line = block.getFieldValue('line');\n    var box = block.getFieldValue('box');\n    var code =\n        `console.log(\"LCD_SET_POSITION,${box}-${line}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['lcd_set_pos_block'] = {\n    init: function() {\n        this.jsonInit(lcdSetPosBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar lcdMessageBlock = {\n    \"type\": \"lcd_message_block\",\n    \"message0\": \"LCD에  \\\" %1 \\\"  출력하기\",\n    \"args0\": [{\n        \"type\": \"field_input\",\n        \"name\": \"message\",\n        \"text\": \"HELLO\"\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['lcd_message_block'] = function(block) {\n    var message = block.getFieldValue('message');\n    var code =\n        `console.log(\"LCD_MSG,${message}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['lcd_message_block'] = {\n    init: function() {\n        this.jsonInit(lcdMessageBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar soundPlayBlock = {\n    \"type\": \"sound_play_block\",\n    \"message0\": \"%1 재생하기\",\n    \"args0\": [{\n        \"type\": \"field_input\",\n        \"name\": \"SOUND\",\n        \"text\": \"abc\",\n        \"output\": \"String\",\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"colour\": 230,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['sound_play_block'] = function(block) {\n    var text = block.getFieldValue('SOUND');\n\n    var code =\n        `console.log(\"SOUND,${text}\");\\n`;\n    return code;\n};\n\nBlockly.Blocks['sound_play_block'] = {\n    init: function() {\n        this.jsonInit(soundPlayBlock);\n        this.setColour(\"#667D8A\");\n        this.toLocaleString('ko');\n    },\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}