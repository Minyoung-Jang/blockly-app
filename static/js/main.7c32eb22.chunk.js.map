{"version":3,"sources":["generator/generator.js","widgets/dialog.js","fields/BlocklyReactField.jsx","fields/DateField.jsx","blocks/customblocks.js","serviceWorker.js","index.js","Blockly/BlocklyComponent.jsx","Blockly/index.js","App.js"],"names":["Blockly","block","getField","getText","CustomDialog","alert","message","callback","console","log","show","onCancel","confirm","showOkay","onOkay","showCancel","prompt","defaultValue","showInput","inputField","value","hide","backdropDiv_","style","display","dialogDiv_","title","options","backdropDiv","dialogDiv","document","createElement","id","cssText","body","appendChild","onclick","event","stopPropagation","innerHTML","getElementsByClassName","createTextNode","dialogInput","getElementById","focus","onkeyup","keyCode","okay","addEventListener","BlocklyReactField","SERIALIZABLE","this","div_","getContentDiv","ReactDOM","render","border","sourceBlock_","colourTertiary","colourBorder","colourLight","setColour","getColour","showPositionedByField","dropdownDispose_","bind","unmountComponentAtNode","FieldRenderComponent","color","React","Component","register","ReactDateField","onDateSelected_","date","setValue","Date","hideIfOwner","value_","toLocaleDateString","fieldElement","textContent","selected","onChange","inline","isAble","startBlock","init","jsonInit","toLocaleString","disabled","onchange","element","type","waitBlock","second","getFieldValue","Boolean","window","location","hostname","match","StrictMode","basename","process","App","navigator","serviceWorker","ready","then","registration","unregister","setLocale","locale","BlocklyComponent","props","blocklyDiv","createRef","toolbox","initialXml","rest","children","primaryWorkspace","inject","current","theme","Xml","domToWorkspace","textToDom","xml","Fragment","ref","xmlns","is","Block","p","Category","Value","Field","Shadow","generateCode","codeList","BlocklyJS","workspaceToCode","simpleWorkspace","workspace","split","code","includes","eval","className","onClick","readOnly","trashcan","media","move","scrollbars","drag","wheel","renderer","zoom","controls","startScale","maxScale","minScale","scaleSpeed","pinch","name","colour","custom"],"mappings":"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","file":"static/js/main.7c32eb22.chunk.js","sourcesContent":["/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Define generation methods for custom blocks.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n// More on generating code:\n// https://developers.google.com/blockly/guides/create-custom-blocks/generating-code\n\nimport * as Blockly from 'blockly/core';\nimport 'blockly/javascript';\n\nBlockly.JavaScript['test_react_field'] = function (block) {\n    return 'console.log(\\'custom block\\');\\n';\n};\n\nBlockly.JavaScript['test_react_date_field'] = function (block) {\n    return 'console.log(' + block.getField('DATE').getText() + ');\\n';\n};\n","\nimport Blockly from 'blockly/core';\nimport 'blockly/blocks';\n\nclass CustomDialog {};\n\n/** Override Blockly.alert() with custom implementation. */\nBlockly.alert = function (message, callback) {\n    console.log('Alert: ' + message);\n    CustomDialog.show('Alert', message, {\n        onCancel: callback\n    });\n};\n\n/** Override Blockly.confirm() with custom implementation. */\nBlockly.confirm = function (message, callback) {\n    console.log('Confirm: ' + message);\n    CustomDialog.show('Confirm', message, {\n        showOkay: true,\n        onOkay: function () {\n            callback(true);\n        },\n        showCancel: true,\n        onCancel: function () {\n            callback(false);\n        }\n    });\n};\n\n/** Override Blockly.prompt() with custom implementation. */\nBlockly.prompt = function (message, defaultValue, callback) {\n    console.log('Prompt: ' + message);\n    CustomDialog.show('Prompt', message, {\n        showInput: true,\n        showOkay: true,\n        onOkay: function () {\n            callback(CustomDialog.inputField.value);\n        },\n        showCancel: true,\n        onCancel: function () {\n            callback(null);\n        }\n    });\n    CustomDialog.inputField.value = defaultValue;\n};\n\n/** Hides any currently visible dialog. */\nCustomDialog.hide = function () {\n    if (CustomDialog.backdropDiv_) {\n        CustomDialog.backdropDiv_.style.display = 'none';\n        CustomDialog.dialogDiv_.style.display = 'none';\n    }\n};\n\n/**\n * Shows the dialog.\n * Allowed options:\n *  - showOkay: Whether to show the OK button.\n *  - showCancel: Whether to show the Cancel button.\n *  - showInput: Whether to show the text input field.\n *  - onOkay: Callback to handle the okay button.\n *  - onCancel: Callback to handle the cancel button and backdrop clicks.\n */\nCustomDialog.show = function (title, message, options) {\n    var backdropDiv = CustomDialog.backdropDiv_;\n    var dialogDiv = CustomDialog.dialogDiv_;\n    if (!dialogDiv) {\n        // Generate HTML\n        backdropDiv = document.createElement('div');\n        backdropDiv.id = 'customDialogBackdrop';\n        backdropDiv.style.cssText =\n            'position: absolute;' +\n            'top: 0; left: 0; right: 0; bottom: 0;' +\n            'background-color: rgba(0, 0, 0, .7);' +\n            'z-index: 100;';\n        document.body.appendChild(backdropDiv);\n\n        dialogDiv = document.createElement('div');\n        dialogDiv.id = 'customDialog';\n        dialogDiv.style.cssText =\n            'background-color: #fff;' +\n            'width: 400px;' +\n            'margin: 20px auto 0;' +\n            'padding: 10px;';\n        backdropDiv.appendChild(dialogDiv);\n\n        dialogDiv.onclick = function (event) {\n            event.stopPropagation();\n        };\n\n        CustomDialog.backdropDiv_ = backdropDiv;\n        CustomDialog.dialogDiv_ = dialogDiv;\n    }\n    backdropDiv.style.display = 'block';\n    dialogDiv.style.display = 'block';\n\n    dialogDiv.innerHTML =\n        '<header class=\"customDialogTitle\"></header>' +\n        '<p class=\"customDialogMessage\"></p>' +\n        (options.showInput ? '<div><input id=\"customDialogInput\"></div>' : '') +\n        '<div class=\"customDialogButtons\">' +\n        (options.showCancel ? '<button id=\"customDialogCancel\">Cancel</button>' : '') +\n        (options.showOkay ? '<button id=\"customDialogOkay\">OK</button>' : '') +\n        '</div>';\n    dialogDiv.getElementsByClassName('customDialogTitle')[0]\n        .appendChild(document.createTextNode(title));\n    dialogDiv.getElementsByClassName('customDialogMessage')[0]\n        .appendChild(document.createTextNode(message));\n\n    var onOkay = function (event) {\n        CustomDialog.hide();\n        options.onOkay && options.onOkay();\n        event && event.stopPropagation();\n    };\n    var onCancel = function (event) {\n        CustomDialog.hide();\n        options.onCancel && options.onCancel();\n        event && event.stopPropagation();\n    };\n\n    var dialogInput = document.getElementById('customDialogInput');\n    CustomDialog.inputField = dialogInput;\n    if (dialogInput) {\n        dialogInput.focus();\n\n        dialogInput.onkeyup = function (event) {\n            if (event.keyCode == 13) {\n                // Process as OK when user hits enter.\n                onOkay();\n                return false;\n            } else if (event.keyCode == 27) {\n                // Process as cancel when user hits esc.\n                onCancel();\n                return false;\n            }\n        };\n    } else {\n        var okay = document.getElementById('customDialogOkay');\n        okay && okay.focus();\n    }\n\n    if (options.showOkay) {\n        document.getElementById('customDialogOkay')\n            .addEventListener('click', onOkay);\n    }\n    if (options.showCancel) {\n        document.getElementById('customDialogCancel')\n            .addEventListener('click', onCancel);\n    }\n\n    backdropDiv.onclick = onCancel;\n};","/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Sample React Blockly Field.\n * This shows you how to create a custom Blockly field that renders a React\n * component inside of the dropdown div when shown.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as Blockly from 'blockly/core';\n\n\nclass BlocklyReactField extends Blockly.Field {\n\n  SERIALIZABLE = true\n  \n  static fromJson(options) {\n    return new BlocklyReactField(options['text']);\n  }\n\n  showEditor_() {\n    this.div_ = Blockly.DropDownDiv.getContentDiv();\n    ReactDOM.render(this.render(),\n      this.div_);\n\n    var border = this.sourceBlock_.style.colourTertiary;\n    border = border.colourBorder || border.colourLight;\n    Blockly.DropDownDiv.setColour(this.sourceBlock_.getColour(), border);\n\n    Blockly.DropDownDiv.showPositionedByField(\n      this, this.dropdownDispose_.bind(this));\n  }\n\n  dropdownDispose_() {\n    ReactDOM.unmountComponentAtNode(this.div_);\n  }\n\n  render() {\n    return <FieldRenderComponent />\n  }\n}\n\nclass FieldRenderComponent extends React.Component {\n\n  render() {\n    return <div style={{ color: '#fff' }}>\n      Hello from React!\n        </div>;\n  }\n}\n\nBlockly.fieldRegistry.register('field_react_component', BlocklyReactField);\n\nexport default BlocklyReactField;\n","/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview React date field that uses the react-datepicker package.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\nimport React from 'react';\nimport * as Blockly from 'blockly/core';\n\nimport BlocklyReactField from './BlocklyReactField';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nclass ReactDateField extends BlocklyReactField {\n\n  static fromJson(options) {\n    return new ReactDateField(new Date(options['date']));\n  }\n  \n  onDateSelected_ = (date) => {\n    this.setValue(new Date(date));\n    Blockly.DropDownDiv.hideIfOwner(this, true);\n  }\n\n  getText_() {\n    return this.value_.toLocaleDateString();\n  };\n\n  fromXml(fieldElement) {\n    this.setValue(new Date(fieldElement.textContent));\n  }\n\n  render() {\n    return <DatePicker\n        selected={this.value_}\n        onChange={this.onDateSelected_}\n        inline />\n  }\n}\n\nBlockly.fieldRegistry.register('field_react_date', ReactDateField);\n\nexport default ReactDateField;\n","import * as Blockly from 'blockly/core';\n\nimport '../fields/BlocklyReactField';\nimport '../fields/DateField';\n\nlet isAble = false;\n\nvar startBlock = {\n  \"type\": \"start_block\",\n  \"message0\": \"▶ 시작\",\n  \"nextStatement\": true,\n};\n\nBlockly.JavaScript['start_block'] = function (block) {\n  var code = '//Start\\n';\n  return code;\n};\n\nBlockly.Blocks['start_block'] = {\n  init: function () {\n    this.jsonInit(startBlock);\n    this.setColour(\"#DB6464\");\n    this.toLocaleString('ko');\n    this.disabled = isAble;\n  },\n  onchange: function (event) {\n    if (`${event.element}` === 'dragStop' && this.type === \"start_block\") {\n      isAble = true;\n    }\n    if (`${event.element}` === 'dragStart' && this.type === \"start_block\") {\n      isAble = false;\n    }\n  }\n};\n\nvar waitBlock = {\n  \"type\": \"wait_block\",\n  \"message0\": \"%1초 기다리기\",\n  \"args0\": [\n    {\n      \"type\": \"field_number\",\n      \"name\": \"duration\",\n      \"value\": 3,\n    },\n  ],\n  \"nextStatement\": null,\n  \"previousStatement\": null,\n};\n\nBlockly.JavaScript['wait_block'] = function (block) {\n  var second = block.getFieldValue(\"duration\");\n\n  var code =\n    `const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < ${second}000);\\n`;\n  return code;\n};\n\nBlockly.Blocks['wait_block'] = {\n  init: function () {\n    this.jsonInit(waitBlock);\n    this.setColour(\"#6137D6\");\n    this.toLocaleString('ko');\n  },\n  onchange: function (event) {\n    if(event.element === \"click\"){\n      console.log(event);\n    }\n  }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './BlocklyComponent.css';\n\nimport Blockly from 'blockly/core';\nimport locale from 'blockly/msg/ko';\nimport 'blockly/blocks';\n\nBlockly.setLocale(locale);\n\nclass BlocklyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.blocklyDiv = React.createRef();\n        this.toolbox = React.createRef();\n    }\n\n    componentDidMount() {\n        const { initialXml, children, ...rest } = this.props;\n        \n        this.primaryWorkspace = Blockly.inject(\n            this.blocklyDiv.current,\n            {\n                toolbox: this.toolbox.current,\n                theme: {\n                    'blockStyles': {\n                        \"loop_blocks\": {\n                            \"colourPrimary\": \"#6137D6\",\n                            \"colourSecondary\": \"#AD7BE9\",\n                            \"colourTertiary\": \"#CDB6E9\"\n                        },\n                        \"logic_blocks\": {\n                            \"colourPrimary\": \"#01579b\",\n                            \"colourSecondary\": \"#64C7FF\",\n                            \"colourTertiary\": \"#C5EAFF\"\n                        },\n                        \"text_blocks\": {\n                            \"colourPrimary\": \"#9B012F\",\n                            \"colourSecondary\": \"#FF6498\",\n                            \"colourTertiary\": \"#FFC5D6\"\n                        },\n                        \"variable_blocks\": {\n                            \"colourPrimary\": \"#9B012F\",\n                            \"colourSecondary\": \"#FF6498\",\n                            \"colourTertiary\": \"#FFC5D6\"\n                        },\n\n                    },\n                    'componentStyles': {\n                        // 'workspaceBackgroundColour': '#41C75E',\n                        // 'toolboxBackgroundColour': '#C80000'\n                    }\n                },\n\n                ...rest\n            },\n        );\n\n        if (initialXml) {\n            Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\n        }\n    }\n\n    get workspace() {\n        return this.primaryWorkspace;\n    }\n\n    setXml(xml) {\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\n    }\n\n    render() {\n        const { children } = this.props;\n\n        return <React.Fragment>\n            <div ref={this.blocklyDiv} id=\"blocklyDiv\" />\n            <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: 'none' }} ref={this.toolbox}>\n                {children}\n            </xml>\n        </React.Fragment>;\n    }\n}\n\nexport default BlocklyComponent;\n","/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview XML wrappers for block, category, value, field and shadow.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n import React from 'react';\nimport BlocklyComponent from './BlocklyComponent';\n\nexport default BlocklyComponent;\n\nconst Block = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"block\", props, children);\n};\n\nconst Category = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"category\", props, children);\n};\n\nconst Value = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"value\", props, children);\n};\n\nconst Field = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"field\", props, children);\n};\n\nconst Shadow = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"shadow\", props, children);\n};\n\nexport { Block, Category, Value, Field, Shadow }","import React from 'react';\nimport './App.css';\n\nimport BlocklyComponent, { Block, Value, Field, Shadow, Category } from './Blockly';\n\nimport BlocklyJS from 'blockly/javascript';\nimport './blocks/customblocks';\nimport './generator/generator';\nimport './widgets/dialog.js'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleWorkspace = React.createRef();\n  }\n\n  generateCode = () => {\n    var codeList = BlocklyJS.workspaceToCode(\n      this.simpleWorkspace.current.workspace\n    );\n\n    for (var code of codeList.split(\"\\n\\n\")) {\n      if (code.includes(\"//Start\\n\")) {\n        eval(code);\n      }\n    }\n    // var msg = new SpeechSynthesisUtterance();\n    // msg.text = \"안녕하세요\";\n    // window.speechSynthesis.speak(msg);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={this.generateCode}> 바꾸기 </button>\n        <BlocklyComponent\n          readOnly={false} trashcan={true} media={'media/'}\n          ref={this.simpleWorkspace}\n          move={{\n            scrollbars: true,\n            drag: true,\n            wheel: true,\n          }}\n          renderer={'zelos'}\n          zoom=\n          {{\n            controls: true,\n            wheel: true,\n            startScale: 1.0,\n            maxScale: 3,\n            minScale: 0.3,\n            scaleSpeed: 1.2,\n            pinch: true\n          }}\n          initialXml={`\n              <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n              </xml>\n            `}>\n          <Category name=\"시작\" colour=\"#DB6464\">\n            <Block type=\"start_block\" />\n          </Category>\n          <Category name=\"흐름\" colour=\"#6137D6\">\n            <Block type=\"wait_block\" />\n            <Block type=\"controls_repeat_ext\">\n              <Value name=\"TIMES\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">10</Field>\n                </Shadow>\n              </Value>\n            </Block>\n          </Category>\n          <Category name=\"자료\" colour=\"300\">\n            <Block type=\"text_print\">\n              <Value name=\"TEXT\">\n                <Shadow type=\"text\">\n                  <Field name=\"TEXT\">abc</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"variables_get\" />\n            <Block type=\"controls_repeat_ext\">\n              <Value name=\"TIMES\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">10</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"controls_ifelse\" />\n            <Block type=\"logic_compare\" />\n            <Block type=\"logic_operation\" />\n            <Block type=\"logic_operation\" />\n            <Block type=\"logic_negate\" />\n            <Block type=\"text_print\">\n              <Value name=\"TEXT\">\n                <Shadow type=\"text\">\n                  <Field name=\"TEXT\">abc</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"logic_null\" disabled=\"false\" />\n            <Block type=\"logic_ternary\" />\n            <Block type=\"text_charAt\">\n              <Value name=\"VALUE\">\n                <Block type=\"variables_get\">\n                  <Field name=\"VAR\">text</Field>\n                </Block>\n              </Value>\n            </Block>\n          </Category>\n          <Category name=\"연산\" colour=\"400\"></Category>\n          <Category name=\"변수\" colour=\"330\" custom=\"VARIABLE\"></Category>\n          <Category name=\"스마트홈\" colour=\"500\"></Category>\n\n        </BlocklyComponent>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}