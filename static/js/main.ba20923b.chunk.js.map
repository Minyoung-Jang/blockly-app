{"version":3,"sources":["App.js","Blockly/BlocklyComponent.jsx","Blockly/index.js","generator/generator.js","widgets/dialog.js","blocks/start_block.js","blocks/flow_blocks/wait_block.js","blocks/flow_blocks/infinite_loop_block.js","blocks/flow_blocks/break_block.js","blocks/calculate_blocks/not_block.js","blocks/calculate_blocks/bool_block.js","blocks/calculate_blocks/compare_block.js","blocks/calculate_blocks/and_or_block.js","blocks/smart_home_blocks/servo_motor_block.js","blocks/smart_home_blocks/rgb_block.js","blocks/smart_home_blocks/led_on_off_block.js","blocks/smart_home_blocks/lcd_clear_block.js","blocks/smart_home_blocks/lcd_set_pos_block.js","blocks/smart_home_blocks/lcd_message_block.js","blocks/sound_blocks/sound_play_block.js","serviceWorker.js","error/NotFound.js","index.js"],"names":["codeStop","App","props","checkIt","window","flutter_inappwebview","callHandler","then","r","console","log","JSON","stringify","generateCode","evalCode","addEventListener","event","parse","codeList","BlocklyJS","workspaceToCode","simpleWorkspace","current","workspace","split","code","includes","eval","err","React","createRef","className","style","display","id","onClick","this","readOnly","trashcan","media","ref","move","scrollbars","drag","wheel","zoom","controls","startScale","maxScale","minScale","scaleSpeed","renderer","initialXml","name","colour","type","custom","Component","Blockly","setLocale","locale","BlocklyComponent","blocklyDiv","toolbox","rest","children","ContextMenuRegistry","registry","unregister","Msg","VARIABLES_SET","MATH_CHANGE_TITLE","CONTROLS_REPEAT_INPUT_DO","CONTROLS_IF_MSG_THEN","Blocks","init","jsonInit","message0","args0","options","inputsInline","output","helpUrl","extensions","toLocaleString","setColour","check","message1","args1","previousStatement","nextStatement","mutator","variable","tooltip","xml","Xml","textToDom","connection","getInput","setShadowDom","shadow","getShadowDom","innerHTML","onchange","primaryWorkspace","inject","theme","blockStyles","loop_blocks","colourPrimary","colourSecondary","logic_blocks","text_blocks","math_blocks","variable_blocks","componentStyles","workspaceBackgroundColour","toolboxBackgroundColour","flyoutBackgroundColour","Constants","Logic","CONTROLS_IF_MUTATOR_MIXIN","elseifCount_","elseCount_","suppressPrefixSuffix","mutationToDom","e","utils","createElement","setAttribute","domToMutation","t","parseInt","getAttribute","rebuildShape_","decompose","newBlock","initSvg","o","nextConnection","n","i","connect","previousConnection","compose","targetBlock","push","valueConnection_","statementConnection_","TypeError","updateShape_","reconnectChildBlocks_","saveConnections","targetConnection","removeInput","appendValueInput","setCheck","appendField","CONTROLS_IF_MSG_ELSEIF","appendDummyInput","appendStatementInput","CONTROLS_IF_MSG_ELSE","Mutator","reconnect","Extensions","registerMutator","LOGIC_COMPARE_ONCHANGE_MIXIN","prevBlocks_","getInputTargetBlock","domToWorkspace","flyout","addChangeListener","Fragment","xmlns","is","Block","p","Category","Value","Field","Shadow","block","getField","getText","CustomDialog","btnActive","document","getElementById","disabled","btnDisabled","alert","message","callback","show","onCancel","confirm","prompt","defaultValue","showInput","showOkay","showDefault","onOkay","inputField","value","showCancel","substring","length","hide","backdropDiv_","dialogDiv_","title","backdropDiv","dialogDiv","cssText","body","appendChild","onclick","stopPropagation","dialogInput","focus","onkeyup","keyCode","okay","setTimeout","isAble","startBlock","element","waitBlock","second","getFieldValue","infiniteLoopBlock","statement","blockCode","blockToCode","breakBlock","notBlock","value_bool","boolean","ORDER_ATOMIC","boolBlock","ORDER_ADDITION","compareBlock","text","a","b","operator","andOrBlock","a_value","b_value","setOutput","servoMotorBlock","degree","rgbBlock","red","green","blue","ledOnOffBlock","onOff","lcdClearBlock","lcdSetPosBlock","line","box","lcdMessageBlock","soundPlayBlock","Boolean","location","hostname","match","NotFound","ReactDOM","render","StrictMode","basename","process","path","navigator","serviceWorker","ready","registration"],"mappings":"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","file":"static/js/main.ba20923b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nimport BlocklyComponent, {\n  Block,\n  Value,\n  Field,\n  Shadow,\n  Category,\n} from \"./Blockly\";\n\nimport BlocklyJS from \"blockly/javascript\";\nimport \"./blocks/customblocks\";\nimport \"./generator/generator\";\nimport \"./widgets/dialog.js\";\n\nlet codeStop = false;\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleWorkspace = React.createRef();\n  }\n\n  checkIt = () => {\n    window.flutter_inappwebview.callHandler(\"flutterHandler\").then((r) => {\n      // codeStop = JSON.parse(JSON.stringify(r))[\"codeStop\"];\n      console.log(\"여기 \" + JSON.stringify(r));\n    });\n  };\n\n  generateCode = () => {\n    let evalCode;\n\n    window.addEventListener(\n      \"flutterInAppWebViewPlatformReady\",\n      function (event) {\n        let isFlutterInAppWebViewReady = true;\n        console.log(event + \"아아아ㅏ아\");\n        if (isFlutterInAppWebViewReady) {\n          window.flutter_inappwebview\n            .callHandler(\"flutterHandler\")\n            .then((r) => {\n              codeStop = JSON.parse(JSON.stringify(r))[\"codeStop\"];\n              console.log(\"여기 \" + JSON.stringify(r));\n            });\n        }\n      }\n    );\n    var codeList = BlocklyJS.workspaceToCode(\n      this.simpleWorkspace.current.workspace\n    );\n\n    for (var code of codeList.split(\"\\n\\n\")) {\n      if (code.split(\" \")[0] === \"var\") {\n        evalCode = code;\n      }\n\n      if (code.includes(\"//Start\\n\")) {\n        evalCode = evalCode + code;\n        try {\n          console.log(evalCode);\n          eval(\"(async () => {\" + evalCode + \"})()\");\n          console.log(\"END\");\n        } catch (err) {\n          console.log(\"CODE_FAIL\");\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\" style={{ display: \"flex\" }}>\n        <div id=\"box\"></div>\n        <div id=\"box1\">\n          <div id=\"column\">\n            <div id=\"subtitle\">PROJECT NAME</div>\n            <div id=\"title\">인공지능 홈</div>\n          </div>\n          <button id=\"codeButton\" onClick={this.checkIt}>\n            <span id=\"icon\">&#9656;&nbsp;&nbsp;</span>\n            <div id=\"buttonSpace\">\n              <span id=\"blank\"></span>\n              <span id=\"start\">START&nbsp;</span>\n            </div>\n          </button>\n        </div>\n        <BlocklyComponent\n          readOnly={false}\n          trashcan={true}\n          media={\"media/\"}\n          ref={this.simpleWorkspace}\n          move={{\n            scrollbars: true,\n            drag: true,\n            wheel: true,\n          }}\n          zoom={{\n            controls: true,\n            wheel: true,\n            startScale: 1.0,\n            maxScale: 1.5,\n            minScale: 0.7,\n            scaleSpeed: 1.1,\n          }}\n          renderer={\"zelos\"}\n          initialXml={`\n              <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n              </xml>\n            `}\n        >\n          <Category name=\"시작\" colour=\"#5AA8DF\">\n            <Block type=\"start_block\" />\n          </Category>\n          <Category name=\"흐름\" colour=\"#A43033\">\n            <Block type=\"wait_block\" />\n            <Block type=\"controls_repeat_ext\">\n              <Value name=\"TIMES\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">10</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"infinite_loop\" />\n            <Block type=\"break_loop\" />\n            <Block type=\"controls_if\" />\n          </Category>\n          <Category name=\"변수\" colour=\"#E99F38\" custom=\"VARIABLE\" />\n          <Category name=\"연산\" colour=\"#7AB964\">\n            <Block type=\"math_number\">\n              <Field name=\"NUM\">123</Field>\n            </Block>\n            <Block type=\"math_arithmetic\">\n              <Value name=\"A\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">1</Field>\n                </Shadow>\n              </Value>\n              <Value name=\"B\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">1</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"logic_compare\">\n              <Value name=\"A\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">1</Field>\n                </Shadow>\n              </Value>\n              <Value name=\"B\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">1</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"and_or_block\">\n              <Value name=\"A\">\n                <Block type=\"boolean_block\">\n                  <Field name=\"BOOL\">TRUE</Field>\n                </Block>\n              </Value>\n              <Value name=\"B\">\n                <Block type=\"boolean_block\">\n                  <Field name=\"BOOL\">TRUE</Field>\n                </Block>\n              </Value>\n            </Block>\n            <Block type=\"not_block\">\n              <Value name=\"BOOL\">\n                <Block type=\"boolean_block\">\n                  <Field name=\"B\">TRUE</Field>\n                </Block>\n              </Value>\n            </Block>\n          </Category>\n          <Category name=\"소리\" colour=\"#F998E3\">\n            <Block type=\"sound_play_block\">\n              <Value name=\"SOUND\">\n                <Shadow type=\"text\">\n                  <Field name=\"TEXT\">abc</Field>\n                </Shadow>\n              </Value>\n            </Block>\n          </Category>\n          <Category name=\"스마트홈\" colour=\"#AE76F5\">\n            <Block type=\"servo_motor_block\" />\n            <Block type=\"rgb_block\" />\n            <Block type=\"led_on_off_block\" />\n            <Block type=\"lcd_clear_block\" />\n            <Block type=\"lcd_set_pos_block\" />\n            <Block type=\"lcd_message_block\" />\n          </Category>\n        </BlocklyComponent>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./BlocklyComponent.css\";\n\nimport Blockly from \"blockly/core\";\nimport locale from \"blockly/msg/ko\";\nimport \"blockly/blocks\";\n\nBlockly.setLocale(locale);\n\nclass BlocklyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.blocklyDiv = React.createRef();\n    this.toolbox = React.createRef();\n  }\n\n  componentDidMount() {\n    const { initialXml, children, ...rest } = this.props;\n    Blockly.ContextMenuRegistry.registry.unregister(\"workspaceDelete\");\n    Blockly.ContextMenuRegistry.registry.unregister(\"undoWorkspace\");\n    Blockly.ContextMenuRegistry.registry.unregister(\"redoWorkspace\");\n    Blockly.Msg.VARIABLES_SET = \"%1를 %2로 정하기\";\n    Blockly.Msg.MATH_CHANGE_TITLE = \"%1를 %2만큼 더하기\";\n    Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = \"\";\n    Blockly.Msg.CONTROLS_IF_MSG_THEN = \"\";\n\n    Blockly.Blocks[\"logic_compare\"] = {\n      init: function () {\n        this.jsonInit({\n          type: \"logic_compare\",\n          message0: \"%1 %2 %3\",\n          args0: [\n            { type: \"input_value\", name: \"A\" },\n            {\n              type: \"field_dropdown\",\n              name: \"OP\",\n              options: [\n                [\"=\", \"EQ\"],\n                [\"\\u2260\", \"NEQ\"],\n                [\"\\u200f<\", \"LT\"],\n                [\"\\u200f\\u2264\", \"LTE\"],\n                [\"\\u200f>\", \"GT\"],\n                [\"\\u200f\\u2265\", \"GTE\"],\n              ],\n            },\n            { type: \"input_value\", name: \"B\" },\n          ],\n          inputsInline: !0,\n          output: \"Boolean\",\n          style: \"logic_blocks\",\n          helpUrl: \"%{BKY_LOGIC_COMPARE_HELPURL}\",\n          extensions: [\"logic_compare\", \"logic_op_tooltip\"],\n        });\n        this.toLocaleString(\"ko\");\n        this.setColour(\"#7AB964\");\n      },\n    };\n\n    Blockly.Blocks[\"controls_if\"] = {\n      init: function () {\n        this.jsonInit({\n          type: \"controls_if\",\n          message0: \"%{BKY_CONTROLS_IF_MSG_IF} %1 라면\",\n          args0: [\n            {\n              type: \"input_value\",\n              name: \"IF0\",\n              check: \"Boolean\",\n            },\n          ],\n          message1: \"%1\",\n          args1: [{ type: \"input_statement\", name: \"DO0\" }],\n          previousStatement: null,\n          nextStatement: null,\n          style: \"logic_blocks\",\n          helpUrl: \"%{BKY_CONTROLS_IF_HELPURL}\",\n          mutator: \"my_mutator\",\n          extensions: [\"controls_if_tooltip\"],\n        });\n        this.toLocaleString(\"ko\");\n      },\n    };\n\n    Blockly.Blocks[\"variables_get\"] = {\n      init: function () {\n        this.jsonInit({\n          type: \"variables_get\",\n          message0: \"%1 값\",\n          args0: [\n            {\n              type: \"field_variable\",\n              name: \"VAR\",\n              variable: \"%{BKY_VARIABLES_DEFAULT_NAME}\",\n            },\n          ],\n          output: null,\n          style: \"variable_blocks\",\n          helpUrl: \"%{BKY_VARIABLES_GET_HELPURL}\",\n          tooltip: \"%{BKY_VARIABLES_GET_TOOLTIP}\",\n          extensions: [\"contextMenu_variableSetterGetter\"],\n        });\n        this.toLocaleString(\"ko\");\n      },\n    };\n\n    Blockly.Blocks[\"variables_set\"] = {\n      init: function () {\n        this.jsonInit({\n          type: \"variables_set\",\n          message0: \"%{BKY_VARIABLES_SET}\",\n          args0: [\n            {\n              type: \"field_variable\",\n              name: \"VAR\",\n              variable: \"%{BKY_VARIABLES_DEFAULT_NAME}\",\n            },\n            {\n              type: \"input_value\",\n              name: \"VALUE\",\n              check: \"Number\",\n            },\n          ],\n          previousStatement: null,\n          nextStatement: null,\n          style: \"variable_blocks\",\n          tooltip: \"%{BKY_VARIABLES_SET_TOOLTIP}\",\n          helpUrl: \"%{BKY_VARIABLES_SET_HELPURL}\",\n          extensions: [\"contextMenu_variableSetterGetter\"],\n        });\n        this.toLocaleString(\"ko\");\n        const xml = Blockly.Xml.textToDom(\n          '<shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow>'\n        );\n        const connection = this.getInput(\"VALUE\").connection;\n        connection.setShadowDom(xml);\n        let shadow = connection.getShadowDom();\n        shadow.innerHTML = '<field name=\"NUM\" is=\"blockly\">1</field>';\n        connection.setShadowDom(shadow);\n      },\n      onchange: function (event) {},\n    };\n\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\n      toolbox: this.toolbox.current,\n      theme: {\n        blockStyles: {\n          loop_blocks: {\n            colourPrimary: \"#A43033\",\n            colourSecondary: \"#FEAFB1\",\n          },\n          logic_blocks: {\n            colourPrimary: \"#A43033\",\n            colourSecondary: \"#FEAFB1\",\n          },\n          text_blocks: {\n            colourPrimary: \"#7AB964\",\n            colourSecondary: \"#BEDAB4\",\n          },\n          math_blocks: {\n            colourPrimary: \"#7AB964\",\n            colourSecondary: \"#BEDAB4\",\n          },\n          variable_blocks: {\n            colourPrimary: \"#E99F38\",\n            colourSecondary: \"#EFC78F\",\n          },\n        },\n        componentStyles: {\n          workspaceBackgroundColour: \"#F7F7FB\",\n          toolboxBackgroundColour: \"#4C536D\",\n          flyoutBackgroundColour: \"#4C536D99\",\n        },\n      },\n      ...rest,\n    });\n\n    Blockly.Constants.Logic.CONTROLS_IF_MUTATOR_MIXIN = {\n      elseifCount_: 0,\n      elseCount_: 0,\n      suppressPrefixSuffix: !0,\n      mutationToDom: function () {\n        if (!this.elseifCount_ && !this.elseCount_) return null;\n        var e = Blockly.utils.xml.createElement(\"mutation\");\n        return (\n          this.elseifCount_ && e.setAttribute(\"elseif\", this.elseifCount_),\n          this.elseCount_ && e.setAttribute(\"else\", 1),\n          e\n        );\n      },\n      domToMutation: function (t) {\n        this.elseifCount_ = parseInt(t.getAttribute(\"elseif\"), 10) || 0;\n        this.elseCount_ = parseInt(t.getAttribute(\"else\"), 10) || 0;\n        this.rebuildShape_();\n      },\n      decompose: function (t) {\n        var e = t.newBlock(\"controls_if_if\");\n        e.initSvg();\n        for (var o = e.nextConnection, n = 1; n <= this.elseifCount_; n++) {\n          var i = t.newBlock(\"controls_if_elseif\");\n          i.initSvg();\n          o.connect(i.previousConnection);\n          o = i.nextConnection;\n        }\n        return (\n          this.elseCount_ &&\n            ((t = t.newBlock(\"controls_if_else\")).initSvg(),\n            o.connect(t.previousConnection)),\n          e\n        );\n      },\n      compose: function (t) {\n        t = t.nextConnection.targetBlock();\n        this.elseCount_ = this.elseifCount_ = 0;\n        for (var e = [null], o = [null], n = null; t; ) {\n          switch (t.type) {\n            case \"controls_if_elseif\":\n              this.elseifCount_++;\n              e.push(t.valueConnection_);\n              o.push(t.statementConnection_);\n              break;\n            case \"controls_if_else\":\n              this.elseCount_++;\n              n = t.statementConnection_;\n              break;\n            default:\n              throw TypeError(\"Unknown block type: \" + t.type);\n          }\n          t = t.nextConnection && t.nextConnection.targetBlock();\n        }\n        this.updateShape_();\n        this.reconnectChildBlocks_(e, o, n);\n      },\n      saveConnections: function (t) {\n        t = t.nextConnection.targetBlock();\n        for (var e = 1; t; ) {\n          switch (t.type) {\n            case \"controls_if_elseif\":\n              var o = this.getInput(\"IF\" + e),\n                n = this.getInput(\"DO\" + e);\n              t.valueConnection_ = o && o.connection.targetConnection;\n              t.statementConnection_ = n && n.connection.targetConnection;\n              e++;\n              break;\n            case \"controls_if_else\":\n              n = this.getInput(\"ELSE\");\n              t.statementConnection_ = n && n.connection.targetConnection;\n              break;\n            default:\n              throw TypeError(\"Unknown block type: \" + t.type);\n          }\n          t = t.nextConnection && t.nextConnection.targetBlock();\n        }\n      },\n      rebuildShape_: function () {\n        var t = [null],\n          e = [null],\n          o = null;\n        this.getInput(\"ELSE\") &&\n          (o = this.getInput(\"ELSE\").connection.targetConnection);\n        for (var n = 1; this.getInput(\"IF\" + n); ) {\n          var i = this.getInput(\"IF\" + n),\n            r = this.getInput(\"DO\" + n);\n          t.push(i.connection.targetConnection);\n          e.push(r.connection.targetConnection);\n          n++;\n        }\n        this.updateShape_();\n        this.reconnectChildBlocks_(t, e, o);\n      },\n      updateShape_: function () {\n        this.getInput(\"ELSE\") && this.removeInput(\"ELSE\");\n        for (var e = 1; this.getInput(\"IF\" + e); ) {\n          this.removeInput(\"IF\" + e);\n          this.removeInput(\"Dummy\");\n          this.removeInput(\"DO\" + e);\n          e++;\n        }\n        for (e = 1; e <= this.elseifCount_; e++) {\n          this.appendValueInput(\"IF\" + e)\n            .setCheck(\"Boolean\")\n            .appendField(Blockly.Msg.CONTROLS_IF_MSG_ELSEIF);\n          this.appendDummyInput(\"Dummy\").appendField(\"라면\");\n          this.appendStatementInput(\"DO\" + e).appendField(\n            Blockly.Msg.CONTROLS_IF_MSG_THEN\n          );\n        }\n        this.elseCount_ &&\n          this.appendStatementInput(\"ELSE\").appendField(\n            Blockly.Msg.CONTROLS_IF_MSG_ELSE\n          );\n      },\n      reconnectChildBlocks_: function (e, o, n) {\n        for (var i = 1; i <= this.elseifCount_; i++) {\n          Blockly.Mutator.reconnect(e[i], this, \"IF\" + i);\n          Blockly.Mutator.reconnect(o[i], this, \"DO\" + i);\n        }\n        Blockly.Mutator.reconnect(n, this, \"ELSE\");\n      },\n    };\n\n    Blockly.Extensions.registerMutator(\n      \"my_mutator\",\n      Blockly.Constants.Logic.CONTROLS_IF_MUTATOR_MIXIN,\n      null,\n      [\"controls_if_elseif\", \"controls_if_else\"]\n    );\n\n    Blockly.Constants.Logic.LOGIC_COMPARE_ONCHANGE_MIXIN = {\n      onchange: function (e) {\n        this.prevBlocks_ || (this.prevBlocks_ = [null, null]);\n        var o = this.getInputTargetBlock(\"A\");\n        var n = this.getInputTargetBlock(\"B\");\n        // o && n && !this.workspace.connectionChecker.doTypeChecks(o.outputConnection, n.outputConnection) && (Blockly.Events.setGroup(e.group), (e = this.prevBlocks_[0]) !== o && (o.unplug(), !e || e.isDisposed() || e.isShadow() || this.getInput(\"A\").connection.connect(e.outputConnection)), (o = this.prevBlocks_[1]) !== n && (n.unplug(), !o || o.isDisposed() || o.isShadow() || this.getInput(\"B\").connection.connect(o.outputConnection)), this.bumpNeighbours(), Blockly.Events.setGroup(!1));\n        this.prevBlocks_[0] = this.getInputTargetBlock(\"A\");\n        this.prevBlocks_[1] = this.getInputTargetBlock(\"B\");\n      },\n    };\n\n    if (initialXml) {\n      Blockly.Xml.domToWorkspace(\n        Blockly.Xml.textToDom(initialXml),\n        this.primaryWorkspace\n      );\n    }\n\n    function workspaceChanged(event) {}\n\n    this.primaryWorkspace.trashcan.flyout = null;\n\n    this.primaryWorkspace.addChangeListener(workspaceChanged);\n  }\n\n  get workspace() {\n    return this.primaryWorkspace;\n  }\n\n  setXml(xml) {\n    Blockly.Xml.domToWorkspace(\n      Blockly.Xml.textToDom(xml),\n      this.primaryWorkspace\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <React.Fragment>\n        <div ref={this.blocklyDiv} id=\"blocklyDiv\" />\n        <xml\n          xmlns=\"https://developers.google.com/blockly/xml\"\n          is=\"blockly\"\n          style={{ display: \"none\" }}\n          ref={this.toolbox}\n        >\n          {children}\n        </xml>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BlocklyComponent;\n","/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview XML wrappers for block, category, value, field and shadow.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n import React from 'react';\nimport BlocklyComponent from './BlocklyComponent';\n\nexport default BlocklyComponent;\n\nconst Block = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"block\", props, children);\n};\n\nconst Category = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"category\", props, children);\n};\n\nconst Value = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"value\", props, children);\n};\n\nconst Field = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"field\", props, children);\n};\n\nconst Shadow = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"shadow\", props, children);\n};\n\nexport { Block, Category, Value, Field, Shadow }","/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Define generation methods for custom blocks.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n// More on generating code:\n// https://developers.google.com/blockly/guides/create-custom-blocks/generating-code\n\nimport * as Blockly from 'blockly/core';\nimport 'blockly/javascript';\n\nBlockly.JavaScript['test_react_field'] = function (block) {\n    return 'console.log(\\'custom block\\');\\n';\n};\n\nBlockly.JavaScript['test_react_date_field'] = function (block) {\n    return 'console.log(' + block.getField('DATE').getText() + ');\\n';\n};\n","import Blockly from \"blockly/core\";\nimport \"blockly/blocks\";\n\nclass CustomDialog {}\n\n/** Override Blockly.alert() with custom implementation. */\nBlockly.alert = function (message, callback) {\n  console.log(\"Alert: \" + message);\n  CustomDialog.show(\"Alert\", message, {\n    onCancel: callback,\n  });\n};\n\n/** Override Blockly.confirm() with custom implementation. */\nBlockly.confirm = function (message, callback) {\n  console.log(\"Confirm: \" + message);\n  // CustomDialog.show('Confirm', message, {\n  //     showOkay: true,\n  //     onOkay: function() {\n  //         callback(true);\n  //     },\n  //     showCancel: true,\n  //     onCancel: function() {\n  //         callback(false);\n  //     }\n  // });\n  callback(true);\n};\n\n/** Override Blockly.prompt() with custom implementation. */\nBlockly.prompt = function (message, defaultValue, callback) {\n  console.log(\"Prompt: \" + message);\n  if (message === \"새 변수 이름:\") {\n    CustomDialog.show(\"변수 만들기\", message, {\n      showInput: true,\n      showOkay: true,\n      showDefault: false,\n      onOkay: function () {\n        callback(CustomDialog.inputField.value);\n      },\n      showCancel: true,\n      onCancel: function () {\n        callback(null);\n      },\n    });\n  } else {\n    CustomDialog.show(message.substring(0, message.length - 1), message, {\n      showInput: true,\n      showOkay: true,\n      showDefault: true,\n      onOkay: function () {\n        callback(CustomDialog.inputField.value);\n      },\n      showCancel: true,\n      onCancel: function () {\n        callback(null);\n      },\n    });\n  }\n  CustomDialog.inputField.value = defaultValue;\n};\n\n/** Hides any currently visible dialog. */\nCustomDialog.hide = function (value) {\n  if (CustomDialog.backdropDiv_) {\n    CustomDialog.backdropDiv_.style.display = \"none\";\n    CustomDialog.dialogDiv_.style.display = \"none\";\n    console.log(\"DIALOG : \" + value);\n  }\n};\n\nfunction btnActive(name) {\n  const target = document.getElementById(name);\n  target.disabled = false;\n}\n\nfunction btnDisabled(name) {\n  const target = document.getElementById(name);\n  target.disabled = true;\n}\n\n/**\n * Shows the dialog.\n * Allowed options:\n *  - showOkay: Whether to show the OK button.\n *  - showCancel: Whether to show the Cancel button.\n *  - showInput: Whether to show the text input field.\n *  - onOkay: Callback to handle the okay button.\n *  - onCancel: Callback to handle the cancel button and backdrop clicks.\n */\nCustomDialog.show = function (title, message, options) {\n  var backdropDiv = CustomDialog.backdropDiv_;\n  var dialogDiv = CustomDialog.dialogDiv_;\n  if (!dialogDiv) {\n    // Generate HTML\n    backdropDiv = document.createElement(\"div\");\n    backdropDiv.id = \"customDialogBackdrop\";\n    backdropDiv.style.cssText =\n      \"position: absolute;\" +\n      \"top: 0; left: 0; right: 0; bottom: 0;\" +\n      \"background-color: rgba(0, 0, 0, .7);\" +\n      \"z-index: 100;\";\n    document.body.appendChild(backdropDiv);\n\n    dialogDiv = document.createElement(\"div\");\n    dialogDiv.id = \"customDialog\";\n    dialogDiv.style.cssText =\n      \"display: flex;\" +\n      \"flex-direction: column;\" +\n      \"max-width: 361px;\" +\n      \"justify-content: center;\" +\n      \"border-radius: 10px;\" +\n      \"align-items: center;\" +\n      \"padding-top: 10px;\" +\n      // 'padding-bottom: 10px;' +\n      \"padding-right: 30px;\" +\n      \"padding-left: 30px;\" +\n      \"background-color: rgba(247, 247, 251, 1);\" +\n      \"margin-right: auto;\" +\n      \"margin-left: auto;\" +\n      \"margin-top: 80px;\";\n    backdropDiv.appendChild(dialogDiv);\n\n    dialogDiv.onclick = function (event) {\n      event.stopPropagation();\n    };\n\n    CustomDialog.backdropDiv_ = backdropDiv;\n    CustomDialog.dialogDiv_ = dialogDiv;\n  }\n  backdropDiv.style.display = \"block\";\n  dialogDiv.style.display = \"block\";\n\n  dialogDiv.innerHTML =\n    '<div style=\"display : flex; flex-direction: column;\">' +\n    '<div class=\"customDialogTitle\" style=\"' +\n    \"color: rgba(99, 125, 220, 1);\" +\n    \"font-size: 14px;\" +\n    \"letter-spacing: 0%;\" +\n    \"padding: 14px;\" +\n    \"text-align: center;\" +\n    \"font-weight: bold;\" +\n    \"border-bottom: 1px solid #D8D8D8;\" +\n    \"font-family: Noto Sans KR, sans-serif;\" +\n    `\">${title}</div>` +\n    (options.showDefault\n      ? \"\"\n      : '<div class=\"customDialogMessage\" style=\"' +\n        \"margin-top: 10px;\" +\n        \"color: rgba(73, 73, 73, 1);\" +\n        \"font-size: 10px;\" +\n        \"font-weight: bold;\" +\n        \"letter-spacing: 0%;\" +\n        \"text-align: left;\" +\n        \"margin-top: 16px;\" +\n        \"font-family: Noto Sans KR, sans-serif;\" +\n        '\">새 변수 이름 :</div>') +\n    (options.showInput\n      ? '<input id=\"customDialogInput\"' +\n        'style=\"' +\n        \"height: 30px;\" +\n        \"width: 100%;\" +\n        \"margin-top: 10px;\" +\n        \"border-radius: 5px;\" +\n        \"border-color: rgba(211, 211, 211, 1);\" +\n        \"border-width: 1px;\" +\n        \"align-self: center;\" +\n        \"border-style: solid;\" +\n        \"background-color: rgba(255, 255, 255, 1);\" +\n        '\">'\n      : \"\") +\n    // '<div class=\"customDialogButtons\">' +\n    (options.showOkay\n      ? '<button id=\"okay\" style=\"' +\n        \" display: flex;\" +\n        \"flex-direction: row;\" +\n        \"justify-content: center;\" +\n        \"margin-top: 20px;\" +\n        \"border-radius: 17.5px;\" +\n        \"align-self: center;\" +\n        \"padding-top: 7px;\" +\n        \"padding-bottom: 7px;\" +\n        \"padding-right: 30px;\" +\n        \"width: 106px;\" +\n        \"padding-left: 30px;\" +\n        \"background-color: rgba(99, 125, 220, 1);\" +\n        \"color: rgba(255, 255, 255, 1);\" +\n        \"font-size: 12px;\" +\n        \"border: none;\" +\n        \"letter-spacing: 0%;\" +\n        \"font-family: Noto Sans KR, sans-serif;\" +\n        `\">${options.showDefault ? \"확인\" : \"생성하기\"}</button>`\n      : \"\") +\n    (options.showCancel\n      ? '<button id=\"cancel\" style=\"' +\n        \"margin-top: 10px;\" +\n        \"margin-bottom: 20px;\" +\n        \"background-color: inherit;\" +\n        \"color: rgba(166, 166, 166, 1);\" +\n        \"font-size: 10px;\" +\n        \"letter-spacing: 0%;\" +\n        \"border: none;\" +\n        \"text-align: center;\" +\n        \"font-family: Noto Sans KR, sans-serif;\" +\n        '\">취소</button>'\n      : \"\") +\n    \"</div>\";\n\n  var onOkay = function (event) {\n    options.onOkay && options.onOkay();\n    event && event.stopPropagation();\n    CustomDialog.hide(\"OKAY\");\n  };\n  var onCancel = function (event) {\n    options.onCancel && options.onCancel();\n    event && event.stopPropagation();\n    CustomDialog.hide(\"CANCEL\");\n  };\n\n  var dialogInput = document.getElementById(\"customDialogInput\");\n  CustomDialog.inputField = dialogInput;\n  if (dialogInput) {\n    dialogInput.focus();\n\n    dialogInput.onkeyup = function (event) {\n      if (event.keyCode === 13) {\n        // Process as OK when user hits enter.\n        onOkay();\n        return false;\n      } else if (event.keyCode === 27) {\n        // Process as cancel when user hits esc.\n        onCancel();\n        return false;\n      }\n    };\n  } else {\n    var okay = document.getElementById(\"okay\");\n    okay && okay.focus();\n  }\n\n  if (options.showOkay) {\n    btnDisabled(\"okay\");\n    document.getElementById(\"okay\").addEventListener(\"click\", onOkay);\n    setTimeout(function () {\n      btnActive(\"okay\");\n    }, 1000);\n  }\n  if (options.showCancel) {\n    btnDisabled(\"cancel\");\n    document.getElementById(\"cancel\").addEventListener(\"click\", onCancel);\n    setTimeout(function () {\n      btnActive(\"cancel\");\n    }, 1000);\n  }\n\n  // backdropDiv.onclick = onCancel;\n};\n","import * as Blockly from 'blockly/core';\n\nlet isAble = false;\n\nvar startBlock = {\n    \"type\": \"start_block\",\n    \"message0\": \"START 버튼을 클릭했을 때\",\n    \"nextStatement\": true,\n};\n\nBlockly.JavaScript['start_block'] = function() {\n    var code = `//Start\n    console.log(\"START\");\n    let date = Date.now();\n    let currentDate = null;\\n`;\n    return code;\n};\n\nBlockly.Blocks['start_block'] = {\n    init: function() {\n        this.jsonInit(startBlock);\n        this.setColour(\"#5AA8DF\");\n        this.toLocaleString('ko');\n        this.disabled = isAble;\n    },\n    onchange: function(event) {\n        if (`${event.element}` === 'dragStop' && this.type === \"start_block\") {\n            isAble = true;\n        }\n        if (`${event.element}` === 'dragStart' && this.type === \"start_block\") {\n            isAble = false;\n        }\n    }\n};","import * as Blockly from 'blockly/core';\n\nvar waitBlock = {\n    \"type\": \"wait_block\",\n    \"message0\": \"%1초 기다리기\",\n    \"args0\": [{\n        \"type\": \"field_number\",\n        \"name\": \"duration\",\n        \"value\": 1,\n    }, ],\n    \"nextStatement\": null,\n    \"previousStatement\": null,\n};\n\nBlockly.JavaScript['wait_block'] = function(block) {\n    var second = block.getFieldValue(\"duration\");\n\n    var code =\n        `date = Date.now();\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < ${second}000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['wait_block'] = {\n    init: function() {\n        this.jsonInit(waitBlock);\n        this.setColour(\"#A43033\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar infiniteLoopBlock = {\n    \"type\": \"infinite_loop\",\n    \"message0\": \"계속 반복하기 %1 %2\",\n    \"args0\": [{\n            \"type\": \"input_dummy\"\n        },\n        {\n            \"type\": \"input_statement\",\n            \"name\": \"INFINITE\"\n        }\n    ],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"무한 루프 블럭\",\n};\n\nBlockly.JavaScript['infinite_loop'] = function(block) {\n    var statement = block.getInputTargetBlock('INFINITE');\n    var blockCode = Blockly.JavaScript.blockToCode(statement);\n    var code =\n        `while(true){\n      ${blockCode}}\\n`;\n    return code;\n};\n\nBlockly.Blocks['infinite_loop'] = {\n    init: function() {\n        this.jsonInit(infiniteLoopBlock);\n        this.setColour(\"#A43033\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar breakBlock = {\n    \"type\": \"break_loop\",\n    \"message0\": \"반복 중단하기\",\n    \"previousStatement\": null,\n    \"tooltip\": \"루프 나오기\",\n};\n\nBlockly.JavaScript['break_loop'] = function(block) {\n    var code =\n        `break;\\n`;\n    return code;\n};\n\nBlockly.Blocks['break_loop'] = {\n    init: function() {\n        this.jsonInit(breakBlock);\n        this.setColour(\"#A43033\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar notBlock = {\n    \"type\": \"not_block\",\n    \"message0\": \"%1 아니다\",\n    \"args0\": [{\n        \"type\": \"input_value\",\n        \"name\": \"BOOL\",\n    }],\n    \"output\": \"Boolean\",\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['not_block'] = function(block) {\n    var value_bool = block.getInputTargetBlock('BOOL');\n    var boolean = Blockly.JavaScript.blockToCode(value_bool);\n    var code =\n        `!${boolean[0]}`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.Blocks['not_block'] = {\n    init: function() {\n        this.jsonInit(notBlock);\n        this.setColour(\"#7AB964\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar boolBlock = {\n    \"type\": \"boolean_block\",\n    \"message0\": \"%1\",\n    \"args0\": [{\n        \"type\": \"field_dropdown\",\n        \"name\": \"BOOL\",\n        \"options\": [\n            [\n                \"참\",\n                \"true\"\n            ],\n            [\n                \"거짓\",\n                \"false\"\n            ]\n        ]\n    }],\n    \"output\": 'Boolean',\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['boolean_block'] = function(block) {\n    var value = block.getFieldValue('BOOL');\n    var code = value;\n    return [code, Blockly.JavaScript.ORDER_ADDITION];\n};\n\nBlockly.Blocks['boolean_block'] = {\n    init: function() {\n        this.jsonInit(boolBlock);\n        this.setColour(\"#7AB964\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from \"blockly/core\";\n\nvar compareBlock = {\n  message0: \"%1 %2 %3\",\n  args0: [\n    {\n      type: \"input_value\",\n      name: \"A\",\n      text: \"1\",\n      output: \"NUMBER\",\n    },\n    {\n      type: \"field_dropdown\",\n      name: \"COMPARE\",\n      options: [\n        [\"=\", \"EQ\"],\n        [\"\\u2260\", \"NEQ\"],\n        [\"\\u200f<\", \"LT\"],\n        [\"\\u200f\\u2264\", \"LTE\"],\n        [\"\\u200f>\", \"GT\"],\n        [\"\\u200f\\u2265\", \"GTE\"],\n      ],\n    },\n    {\n      type: \"input_value\",\n      name: \"B\",\n      text: \"1\",\n      output: \"NUMBER\",\n    },\n  ],\n  inputsInline: true,\n  output: \"Boolean\",\n  colour: 230,\n  tooltip: \"\",\n  helpUrl: \"\",\n};\n\nBlockly.JavaScript[\"compare_block\"] = function (block) {\n  var a = block.getInputTargetBlock(\"A\");\n  var b = block.getInputTargetBlock(\"B\");\n  // var myvar = Blockly.JavaScript.variableDB_.getName(\n  //   block.getFieldValue(\"A\"),\n  //   Blockly.VARIABLE_CATEGORY_NAME\n  // );\n  // console.log(\"var : \" + myvar);\n  console.log(a);\n  console.log(\"B : \" + b);\n  var operator = block.getFieldValue(\"COMPARE\");\n  var code = `${a} ${operator} ${b}`;\n  return [code, Blockly.JavaScript.ORDER_ADDITION];\n};\n\nBlockly.Blocks[\"compare_block\"] = {\n  init: function () {\n    this.jsonInit(compareBlock);\n    this.setColour(\"#7AB964\");\n    this.toLocaleString(\"ko\");\n  },\n};\n\n// {\"motor\" : 180}\n// {\"LED\" : true}\n// {\"LED_COLOR\" : {\"R\" : 100, \"G\" : 200, \"\"}}\n\n// LCD,as;dlfja sldjfl;jas,sdff\n","import * as Blockly from 'blockly/core';\n\nvar andOrBlock = {\n    \"message0\": \"%1 %2 %3\",\n    \"args0\": [{\n            \"type\": \"input_value\",\n            \"name\": \"A\",\n            \"check\": \"Boolean\",\n            \"output\": \"Boolean\",\n        },\n        {\n            \"type\": \"field_dropdown\",\n            \"name\": \"COMPARE\",\n            \"options\": [\n                [\n                    \"그리고\",\n                    \"&&\"\n                ],\n                [\n                    \"또는\",\n                    \"||\"\n                ]\n            ]\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"B\",\n            \"check\": \"Boolean\",\n            \"output\": \"Boolean\",\n        },\n    ],\n    \"output\": \"Boolean\",\n    \"inputsInline\": true,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['and_or_block'] = function(block) {\n    var a = block.getInputTargetBlock('A');\n    var b = block.getInputTargetBlock('B');\n    var a_value = Blockly.JavaScript.blockToCode(a);\n    var b_value = Blockly.JavaScript.blockToCode(b);\n    var operator = block.getFieldValue('COMPARE');\n\n    console.log(`${a_value[0]} ${operator} ${b_value[0]}`);\n\n    var code =\n        `${a_value[0]} ${operator} ${b_value[0]}`;\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];;\n};\n\nBlockly.Blocks['and_or_block'] = {\n    init: function() {\n        this.jsonInit(andOrBlock);\n        this.setColour(\"#7AB964\");\n        this.setOutput(true, 'Boolean');\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar servoMotorBlock = {\n    \"type\": \"servo_motor_block\",\n    \"message0\": \"서보모터를 %1로 정하기\",\n    \"args0\": [{\n        \"type\": \"field_dropdown\",\n        \"name\": \"degree\",\n        \"options\": [\n            [\n                \"0°\",\n                \"0\"\n            ],\n            [\n                \"180°\",\n                \"180\"\n            ]\n        ]\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['servo_motor_block'] = function(block) {\n    var degree = block.getFieldValue('degree');\n    var code =\n        `console.log(\"MOTOR,${degree}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['servo_motor_block'] = {\n    init: function() {\n        this.jsonInit(servoMotorBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar rgbBlock = {\n    \"type\": \"rgb_block\",\n    \"message0\": \"LED 색상 R: %1  G: %2  B: %3\",\n    \"args0\": [{\n            \"type\": \"field_number\",\n            \"name\": \"red\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 255,\n            \"precision\": 1\n        },\n        {\n            \"type\": \"field_number\",\n            \"name\": \"green\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 255,\n            \"precision\": 1\n        },\n        {\n            \"type\": \"field_number\",\n            \"name\": \"blue\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 255,\n            \"precision\": 1\n        }\n    ],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['rgb_block'] = function(block) {\n    var red = block.getFieldValue('red');\n    var green = block.getFieldValue('green');\n    var blue = block.getFieldValue('blue');\n    var code =\n        `console.log(\"LED_COLOR,R${red}-G${green}-B${blue}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['rgb_block'] = {\n    init: function() {\n        this.jsonInit(rgbBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar ledOnOffBlock = {\n    \"type\": \"led_on_off_block\",\n    \"message0\": \"LED %1\",\n    \"args0\": [{\n        \"type\": \"field_dropdown\",\n        \"name\": \"onOff\",\n        \"options\": [\n            [\n                \"켜기\",\n                \"true\"\n            ],\n            [\n                \"끄기\",\n                \"false\"\n            ]\n        ]\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['led_on_off_block'] = function(block) {\n    var onOff = block.getFieldValue('onOff');\n    var code =\n        `console.log(\"LED,${onOff}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['led_on_off_block'] = {\n    init: function() {\n        this.jsonInit(ledOnOffBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar lcdClearBlock = {\n    \"type\": \"lcd_clear_block\",\n    \"message0\": \"LCD 모두 지우기\",\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['lcd_clear_block'] = function(block) {\n    var code =\n        `console.log(\"LCD_CLEAR,\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['lcd_clear_block'] = {\n    init: function() {\n        this.jsonInit(lcdClearBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar lcdSetPosBlock = {\n    \"type\": \"lcd_set_pos_block\",\n    \"message0\": \"LCD 글자 위치 정하기  %1 번째 줄,  %2 번째 칸\",\n    \"args0\": [{\n            \"type\": \"field_number\",\n            \"name\": \"line\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 1,\n            \"precision\": 1\n        },\n        {\n            \"type\": \"field_number\",\n            \"name\": \"box\",\n            \"value\": 0,\n            \"min\": 0,\n            \"max\": 15,\n            \"precision\": 1\n        }\n    ],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['lcd_set_pos_block'] = function(block) {\n    var line = block.getFieldValue('line');\n    var box = block.getFieldValue('box');\n    var code =\n        `console.log(\"LCD_SET_POSITION,${box}-${line}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['lcd_set_pos_block'] = {\n    init: function() {\n        this.jsonInit(lcdSetPosBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from 'blockly/core';\n\nvar lcdMessageBlock = {\n    \"type\": \"lcd_message_block\",\n    \"message0\": \"LCD에 %1 출력하기\",\n    \"args0\": [{\n        \"type\": \"field_input\",\n        \"name\": \"message\",\n        \"text\": \"HELLO\"\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"tooltip\": \"\",\n    \"helpUrl\": \"\"\n};\n\nBlockly.JavaScript['lcd_message_block'] = function(block) {\n    var message = block.getFieldValue('message');\n    var code =\n        `console.log(\"LCD_MSG,${message}\");\\n` +\n        `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < 1000);\\n`;\n    return code;\n};\n\nBlockly.Blocks['lcd_message_block'] = {\n    init: function() {\n        this.jsonInit(lcdMessageBlock);\n        this.setColour(\"#AE76F5\");\n        this.toLocaleString('ko');\n    },\n};","import * as Blockly from \"blockly/core\";\n\nvar soundPlayBlock = {\n  type: \"sound_play_block\",\n  message0: \"%1 재생하기\",\n  args0: [\n    {\n      type: \"field_input\",\n      name: \"SOUND\",\n      text: \"안녕하세요\",\n      output: \"String\",\n    },\n  ],\n  previousStatement: null,\n  nextStatement: null,\n  colour: 230,\n  tooltip: \"\",\n  helpUrl: \"\",\n};\n\nBlockly.JavaScript[\"sound_play_block\"] = function (block) {\n  var text = block.getFieldValue(\"SOUND\");\n\n  var code =\n    `console.log(\"SOUND,${text}\");\\n` +\n    `date = Date.now();\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < ${text.length}*200);\\n`;\n  //     +`console.log(codeStop);\\n` +\n  // `if(codeStop){ return; }\\n`\n  return code;\n};\n\nBlockly.Blocks[\"sound_play_block\"] = {\n  init: function () {\n    this.jsonInit(soundPlayBlock);\n    this.setColour(\"#F998E3\");\n    this.toLocaleString(\"ko\");\n  },\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nconst NotFound = () => {\n    return (\n        <div className=\"NotFound\">\n        <h3>Sorry, Please Check Your Internet!</h3>\n      </div>\n    \n    )\n}\n\nexport default NotFound;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport NotFound from \"./error/NotFound\";\n\nwindow.addEventListener(\"flutterInAppWebViewPlatformReady\", function (event) {\n  console.log(event + \"아아아ㅏ아\");\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path={\"/\"} element={<App />} />\n        <Route path={\"*\"} element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}